spring.application.name=order-service

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=Dang972004@
spring.jpa.hibernate.ddl-auto=update

server.port=8081

eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka
eureka.instance.hostname=localhost

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilience4j
resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true
# D?ng ký m?t Health Indicator vào Actuator c?a Spring Boot /actuator/heath
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
# T?i ?a 10 s? ki?n g?n nh?t s? ???c l?u l?i
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=COUNT_BASED
# Circuit Breaker s? ki?m tra m?t s? l??ng request c? ??nh ?? quy?t ??nh m? ho?c ?óng.
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5
# Circuit Breaker s? ?ánh giá t? l? l?i d?a trên 5 request g?n nh?t.
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
# N?u trong c?a s? tr??t (5 request), h?n 50% request th?t b?i (2/5), Circuit Breaker s? m?.
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
# Circuit Breaker s? ch?n t?t c? request trong 5 giây tr??c khi th? l?i.
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
# Trong tr?ng thái HALF-OPEN, t?i ?a 3 request s? ???c g?i ??n service.
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true
# B?n không c?n g?i th? công ?? chuy?n tr?ng thái. Sau 5 giây, Circuit Breaker s? t? ki?m tra l?i b?ng cách cho phép m?t s? request th? nghi?m.

#Resilience4j timeout
resilience4j.timelimiter.instances.inventory.timeout-duration=3s
# N?u request v??t quá th?i gian 3 giây, nó s? b? h?y và tr? v? l?i (th??ng là TimeoutException).

#Resilience Retry
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0

# Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.project_microservice.order_service.event.OrderPlaceEvent